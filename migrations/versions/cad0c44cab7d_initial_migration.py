"""Initial migration.

Revision ID: cad0c44cab7d
Revises: 
Create Date: 2024-07-25 16:06:43.818418

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cad0c44cab7d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('primary_phone', sa.String(length=15), nullable=True),
    sa.Column('secondary_phone', sa.String(length=15), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.Column('availability_status', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('pp_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('note',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('target_id', sa.String(length=20), nullable=False),
    sa.Column('target_type', sa.String(length=20), nullable=False),
    sa.Column('note', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('anchor_id', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['anchor_id'], ['note.id'], name='fk_anchor_note'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('organiser_id', sa.String(length=20), nullable=False),
    sa.Column('invitee_id', sa.String(length=20), nullable=False),
    sa.Column('mode', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('coordinates', sa.String(length=255), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('purpose', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invitee_id'], ['account.user_id'], name='fk_appointment_invitee'),
    sa.ForeignKeyConstraint(['organiser_id'], ['account.user_id'], name='fk_appointment_organiser'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availability',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['account.user_id'], name='fk_availability_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_officer_information',
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('speciality', sa.String(length=255), nullable=False),
    sa.Column('licence', sa.String(length=255), nullable=False),
    sa.Column('years_of_experience', sa.Integer(), nullable=False),
    sa.Column('affiliation', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['account.user_id'], name='fk_medical_officer_id_doctor_id'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('medical_record',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('patient_id', sa.String(length=20), nullable=False),
    sa.Column('doctor_id', sa.String(length=20), nullable=False),
    sa.Column('diagnosis', sa.String(length=255), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('previous_consultation', sa.String(length=20), nullable=True),
    sa.Column('symptoms', sa.String(length=255), nullable=True),
    sa.Column('first_aid', sa.String(length=255), nullable=True),
    sa.Column('blood_pressure', sa.String(length=20), nullable=True),
    sa.Column('heart_rate', sa.Integer(), nullable=True),
    sa.Column('respiratory_rate', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('oxygen_saturation', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['account.user_id'], name='fk_medical_record_doctor_id'),
    sa.ForeignKeyConstraint(['patient_id'], ['account.user_id'], name='fk_medical_record_patient_id'),
    sa.ForeignKeyConstraint(['previous_consultation'], ['medical_record.id'], name='fk_medical_record_previous_consultation'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('otp',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('otp_token', sa.String(length=12), nullable=False),
    sa.Column('otp_code', sa.String(length=4), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['account.user_id'], name='fk_otp_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session_token',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('session_token', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['account.user_id'], name='fk_session_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('sender_id', sa.String(length=36), nullable=False),
    sa.Column('receiver_id', sa.String(length=36), nullable=False),
    sa.Column('payment_method', sa.String(length=36), nullable=False),
    sa.Column('account_number', sa.String(length=50), nullable=False),
    sa.Column('reference_number', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('fee', sa.Float(), nullable=False),
    sa.Column('exchange_rate', sa.Float(), nullable=False),
    sa.Column('original_amount', sa.Float(), nullable=False),
    sa.Column('original_currency', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['account.user_id'], name='fk_transaction_receiver_id'),
    sa.ForeignKeyConstraint(['sender_id'], ['account.user_id'], name='fk_transaction_sender_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference_number')
    )
    op.create_table('test_scan',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('medical_record_id', sa.String(length=20), nullable=False),
    sa.Column('technician_id', sa.String(length=20), nullable=False),
    sa.Column('test_results', sa.String(length=255), nullable=False),
    sa.Column('test_date', sa.Date(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('test_results_url', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_record.id'], name='fk_test_scan_medical_record_id'),
    sa.ForeignKeyConstraint(['technician_id'], ['account.user_id'], name='fk_test_scan_technician_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('treatment_plan',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('medical_record_id', sa.String(length=20), nullable=False),
    sa.Column('plan_details', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_record.id'], name='fk_treatment_plan_medical_record_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medication_prescription',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('treatment_plan_id', sa.String(length=20), nullable=False),
    sa.Column('dispensing_officer_id', sa.String(length=20), nullable=False),
    sa.Column('prescription_details', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('dispensing_date', sa.DateTime(), nullable=True),
    sa.Column('dispensing_url', sa.String(length=255), nullable=True),
    sa.Column('prescription_url', sa.String(length=255), nullable=True),
    sa.Column('is_dispensed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['dispensing_officer_id'], ['account.user_id'], name='fk_medication_prescription_dispensing_officer_id'),
    sa.ForeignKeyConstraint(['treatment_plan_id'], ['treatment_plan.id'], name='fk_medication_prescription_treatment_plan_id'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('medication_prescription')
    op.drop_table('treatment_plan')
    op.drop_table('test_scan')
    op.drop_table('transaction')
    op.drop_table('session_token')
    op.drop_table('otp')
    op.drop_table('medical_record')
    op.drop_table('medical_officer_information')
    op.drop_table('availability')
    op.drop_table('appointment')
    op.drop_table('note')
    op.drop_table('account')
    # ### end Alembic commands ###
